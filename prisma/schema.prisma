// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  first_name String
  last_name String
  email String @unique
  password String
   createdAt    DateTime   @default(now())         
  updatedAt    DateTime   @default(now()) @updatedAt              
  itinerary    Itinerary[]
  packingList  PackingList[]
  budget       Budget[]
  journalEntry JournalEntry[]
  checklistItem ChecklistItem[]
}

model Itinerary {
  id           String    @id @default(uuid())
  userId       String
  tripName     String    
  startDate    DateTime  
  endDate      DateTime 
  type         String    
  name         String    
  description  String?   
  date         DateTime 
  time         String    
  user         User      @relation(fields: [userId], references: [id])
  activities   Activity[] 
}

model Activity {
  id            String    @id @default(uuid())
  itineraryId   String
  name          String
  description   String?
  activityTime  DateTime
  location      String
  itinerary     Itinerary @relation(fields: [itineraryId], references: [id])
}


model PackingList {
  id        String  @id @default(uuid())
  userId    String
  name      String  
  category  String  
  packed    Boolean @default(false) 
  tripType  String  
  user      User    @relation(fields: [userId], references: [id])
}


model Budget {
  id        String  @id @default(uuid())
  userId    String
  name      String  
  category  String  
  amount    Float   
  currency  String  
  date      DateTime 
  tripType  String   
  user      User     @relation(fields: [userId], references: [id])
}


model JournalEntry {
  id        String    @id @default(uuid())
  userId    String
  title     String    
  content   String   
  imageUrl  String?   
  createdAt DateTime  @default(now()) 
  updatedAt DateTime  @updatedAt     
  user      User      @relation(fields: [userId], references: [id])
}


model ChecklistItem {
  id        String    @id @default(uuid())
  userId    String
  name      String    
  completed Boolean   @default(false) 
  dueDate   DateTime  
  createdAt DateTime  @default(now())  
  updatedAt DateTime  @updatedAt     
  user      User      @relation(fields: [userId], references: [id])
}
